{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.29.2",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@anagolay/api!",
  "docComment": "",
  "name": "@anagolay/api",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@anagolay/api!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/api!connectToWs:function(1)",
          "docComment": "/**\n * Create a Websocket connection\n *\n * @param connectTo - A host to connect to, default is `wss://idiyanale-testnet.anagolay.io`\n *\n * Example: ```ts import {connectToWs} from '@anagolay/api' const api = await connectToWs() // Retrieve the chain & node information information via rpc calls const [chain, nodeName, nodeVersion] = await Promise.all([ api.rpc.system.chain(), api.rpc.system.name(), api.rpc.system.version(), ]);\n *\n * console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`); ```\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function connectToWs(connectTo?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ApiPromise",
              "canonicalReference": "@polkadot/api!ApiPromise:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "connectTo",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "connectToWs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/api!connectToWsWithCorrectRpc:function(1)",
          "docComment": "/**\n * THIS IS THE CONNECTION WITH REAL RPCS FROM THE DEFINITIONS. IT IS FAILING NOW, SO I MADE IT FOR TESTING This includes the types as well\n *\n * @param connectTo - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function connectToWsWithCorrectRpc(connectTo?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ApiPromise",
              "canonicalReference": "@polkadot/api!ApiPromise:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "connectTo",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "connectToWsWithCorrectRpc"
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/api!convertModel:function(1)",
          "docComment": "/**\n * Converts the model from polkadot to anagolay\n *\n * @remarks\n *\n * https://ipfs.anagolay.network/ipfs/QmNuZM4KGfyTMZr8DSrN5xgaMShHgCyXuDCP7AseAFHxuF?filename=BtreeMap%20hashing%20the%20key.png\n *\n * @param polkadotModel - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function convertModel<T>(polkadotModel: "
            },
            {
              "kind": "Reference",
              "text": "Codec",
              "canonicalReference": "@polkadot/types-codec!Codec:interface"
            },
            {
              "kind": "Content",
              "text": ", isExtended?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "polkadotModel",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "isExtended",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "convertModel"
        },
        {
          "kind": "Class",
          "canonicalReference": "@anagolay/api!CustomEventEmitter:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CustomEventEmitter extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "!\"\\\"events\\\"\"~EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CustomEventEmitter",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@anagolay/api!defaultChainToConnect:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultChainToConnect: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultChainToConnect",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/api!getCachedApi:function(1)",
          "docComment": "/**\n * If there is a cached instance it will be returned otherwise error is thrown\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCachedApi(): "
            },
            {
              "kind": "Reference",
              "text": "ApiPromise",
              "canonicalReference": "@polkadot/api!ApiPromise:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getCachedApi"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@anagolay/api!ICustomEventEmitter:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface ICustomEventEmitter extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "!\"\\\"events\\\"\"~EventEmitter:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomEventEmitter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@anagolay/api!ICustomEventEmitter#emit:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emit(event: "
                },
                {
                  "kind": "Content",
                  "text": "string | symbol"
                },
                {
                  "kind": "Content",
                  "text": ", payload: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventMessage",
                  "canonicalReference": "@anagolay/api!IEventMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "emit"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@anagolay/api!ICustomEventEmitter#on:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on(event: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(data: "
                },
                {
                  "kind": "Reference",
                  "text": "IEventMessage",
                  "canonicalReference": "@anagolay/api!IEventMessage:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "on"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@anagolay/api!IEventMessage:interface",
          "docComment": "/**\n * Generic event message\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEventMessage "
            }
          ],
          "releaseTag": "Public",
          "name": "IEventMessage",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/api!IEventMessage#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        message: string;\n        extra?: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/api!IEventMessage#finalized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "finalized?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "finalized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/api!IEventMessage#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@anagolay/api!IOperationWithVersions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IOperationWithVersions "
            }
          ],
          "releaseTag": "Public",
          "name": "IOperationWithVersions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/api!IOperationWithVersions#operation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operation: "
                },
                {
                  "kind": "Reference",
                  "text": "AnOperation",
                  "canonicalReference": "@anagolay/api!AnOperation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@anagolay/api!IOperationWithVersions#versions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "versions: "
                },
                {
                  "kind": "Reference",
                  "text": "AnOperationVersion",
                  "canonicalReference": "@anagolay/api!AnOperationVersion:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "versions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@anagolay/api!networkCallback:function(1)",
          "docComment": "/**\n * Generic callback for all `tx.signAndSend` methods Usage:\n * ```ts\n *   import createEventEmitter from '@anagolay/api/events'\n *   const broadcast = createEventEmitter()\n *   const receivedInstance = await api.tx.utility\n *     .batch(txs)\n *     .signAndSend(signer, {}, params =>\n *       networkCallback(params, broadcast, EVENT_NAME_BATCH)\n *     )\n *\n *     // usage\n *      receivedInstance.on(EVENT_NAME_BATCH, p => console.log(p))\n * ```\n *\n * @param params - [ISubmittableResult] callback params from the call\n *\n * @param broadcast - EventEmitter instance\n *\n * @param eventName - the event name for each pallet. available in `./config.ts`\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function networkCallback(params: "
            },
            {
              "kind": "Reference",
              "text": "ISubmittableResult",
              "canonicalReference": "@polkadot/types!ISubmittableResult:interface"
            },
            {
              "kind": "Content",
              "text": ", broadcast: "
            },
            {
              "kind": "Reference",
              "text": "ICustomEventEmitter",
              "canonicalReference": "@anagolay/api!ICustomEventEmitter:interface"
            },
            {
              "kind": "Content",
              "text": ", eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "broadcast",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "networkCallback"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@anagolay/api!pallets:namespace",
          "docComment": "",
          "excerptTokens": [],
          "releaseTag": "None",
          "name": "pallets",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Namespace",
              "canonicalReference": "@anagolay/api!pallets.operations:namespace",
              "docComment": "",
              "excerptTokens": [],
              "releaseTag": "None",
              "name": "operations",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Namespace",
                  "canonicalReference": "@anagolay/api!pallets.operations.config:namespace",
                  "docComment": "",
                  "excerptTokens": [],
                  "releaseTag": "None",
                  "name": "config",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.operations.config.EVENT_NAME_BATCH:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_BATCH: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_BATCH",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.operations.config.EVENT_NAME_ERROR:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_ERROR: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_ERROR",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.operations.config.EVENT_NAME_SINGLE:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_SINGLE: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_SINGLE",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.operations.createSubmittableExtrinsic:function(1)",
                  "docComment": "/**\n * Helper function for creating the Submittable result. This can be easily used in the `ramda.map`.\n * ```ts\n * import { map } from 'ramda'\n * const txs = map(createSubmittableExtrinsic, d)\n * ```\n *\n * @param operationData - \n *\n * @param versionData - \n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function createSubmittableExtrinsic(operationData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OperationData",
                      "canonicalReference": "@anagolay/api!OperationData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", versionData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OperationVersionData",
                      "canonicalReference": "@anagolay/api!OperationVersionData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubmittableExtrinsic",
                      "canonicalReference": "@polkadot/api-base!SubmittableExtrinsic:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<'promise'>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "operationData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "versionData",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "name": "createSubmittableExtrinsic"
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@anagolay/api!pallets.operations.palletName:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "palletName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "isReadonly": true,
                  "releaseTag": "Public",
                  "name": "palletName",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.operations.retrieveOperationsPaged:function(1)",
                  "docComment": "/**\n * Fetch the operations and their versions.\n *\n * @param pageNum - \n *\n * @param pageSize - \n *\n * @returns Decoded structure {@link IOperationWithVersions}\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function retrieveOperationsPaged(pageNum: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", pageSize: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Promise",
                      "canonicalReference": "!Promise:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "IOperationWithVersions",
                      "canonicalReference": "@anagolay/api!IOperationWithVersions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "pageNum",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "pageSize",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "name": "retrieveOperationsPaged"
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.operations.save:function(1)",
                  "docComment": "/**\n * Save a single operation to the chain.\n *\n * @param operationData - Operation Data to save\n *\n * @param versionData - Operation Version Data to save\n *\n * @param signer - Account that will be owner of the transaction and ones who pays the fees\n *\n * @param options - Signer options\n *\n * @returns the custom event emitter\n *\n * Example:\n * ```ts\n * import { pallets } from '@anagolay/api';\n * const broadcast = await pallets.operations.save(operationData, versionData, signer)\n *\n * broadcast.on(pallets.operations.config.EVENT_NAME_SINGLE, (p) => {\n *   console.log('[operations:save]', p.message)\n *   if (p.finalized) {\n *     process.exit(0)\n *   }\n * })\n * ```\n *\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function save(operationData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OperationData",
                      "canonicalReference": "@anagolay/api!OperationData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", versionData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "OperationVersionData",
                      "canonicalReference": "@anagolay/api!OperationVersionData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", signer: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AddressOrPair",
                      "canonicalReference": "@polkadot/api-base!AddressOrPair:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SignerOptions",
                      "canonicalReference": "@polkadot/api!SignerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Promise",
                      "canonicalReference": "!Promise:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "ICustomEventEmitter",
                      "canonicalReference": "@anagolay/api!ICustomEventEmitter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "operationData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "versionData",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "signer",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 11
                      },
                      "isOptional": true
                    }
                  ],
                  "name": "save"
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@anagolay/api!pallets.poe:namespace",
              "docComment": "",
              "excerptTokens": [],
              "releaseTag": "None",
              "name": "poe",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Namespace",
                  "canonicalReference": "@anagolay/api!pallets.poe.config:namespace",
                  "docComment": "",
                  "excerptTokens": [],
                  "releaseTag": "None",
                  "name": "config",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.poe.config.EVENT_NAME_BATCH:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_BATCH: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_BATCH",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.poe.config.EVENT_NAME_ERROR:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_ERROR: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_ERROR",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.poe.config.EVENT_NAME_SINGLE:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_SINGLE: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_SINGLE",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.poe.createSubmittableExtrinsic:function(1)",
                  "docComment": "/**\n * Helper function for creating the Submittable result. This can be easily used in the `ramda.map` function with the list of SnProof. Returns the Submittable statement object\n * ```ts\n * import { map } from 'ramda'\n * const txs = map(createSubmittableExtrinsic, d)\n * ```\n *\n * @param d - Typescript native Proof\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function createSubmittableExtrinsic(d: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AnProofData",
                      "canonicalReference": "@anagolay/api!AnProofData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubmittableExtrinsic",
                      "canonicalReference": "@polkadot/api-base!SubmittableExtrinsic:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<'promise'>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "d",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "name": "createSubmittableExtrinsic"
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@anagolay/api!pallets.poe.palletName:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "palletName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "isReadonly": true,
                  "releaseTag": "Public",
                  "name": "palletName",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.poe.save:function(1)",
                  "docComment": "/**\n * Save a single poe to the chain. You need to provide the data, the ID is calculated before saving.\n *\n * __NOTE__ calculating the ID inside allows us to decouple the ID generation from the rest of the code and potentially the calculation of the ID on the chain\n *\n * @param d - Proof data that we want to save to the chain.\n *\n * @param signer - Account that will be owner of the transaction and ones who pays the fees\n *\n * @param options - Signer options\n *\n * @returns the custom event emitter\n *\n * Example:\n * ```ts\n * import { pallets } from '@anagolay/api';\n * const broadcast = await pallets.poe.save(data, signer)\n *\n * broadcast.on(pallets.poe.config.EVENT_NAME_SINGLE, (p) => {\n *   console.log('[poe:save]', p.message)\n *   if (p.finalized) {\n *     process.exit(0)\n *   }\n * })\n * ```\n *\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function save(d: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AnProofData",
                      "canonicalReference": "@anagolay/api!AnProofData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", signer: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AddressOrPair",
                      "canonicalReference": "@polkadot/api-base!AddressOrPair:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SignerOptions",
                      "canonicalReference": "@polkadot/api!SignerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Promise",
                      "canonicalReference": "!Promise:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "ICustomEventEmitter",
                      "canonicalReference": "@anagolay/api!ICustomEventEmitter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "d",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "signer",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 9
                      },
                      "isOptional": true
                    }
                  ],
                  "name": "save"
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "@anagolay/api!pallets.statements:namespace",
              "docComment": "",
              "excerptTokens": [],
              "releaseTag": "None",
              "name": "statements",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Namespace",
                  "canonicalReference": "@anagolay/api!pallets.statements.config:namespace",
                  "docComment": "",
                  "excerptTokens": [],
                  "releaseTag": "None",
                  "name": "config",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.statements.config.EVENT_NAME_BATCH:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_BATCH: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_BATCH",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.statements.config.EVENT_NAME_ERROR:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_ERROR: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_ERROR",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "Variable",
                      "canonicalReference": "@anagolay/api!pallets.statements.config.EVENT_NAME_SINGLE:var",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "EVENT_NAME_SINGLE: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        }
                      ],
                      "isReadonly": true,
                      "releaseTag": "Public",
                      "name": "EVENT_NAME_SINGLE",
                      "variableTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ]
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.statements.createSubmittableExtrinsicOfCopyright:function(1)",
                  "docComment": "/**\n * Helper function for creating the Submittable result. This can be easily used in the `ramda.map` function with the list of AnStatementData[]. Returns the Submittable statement object\n * ```ts\n * import { map } from 'ramda'\n * const txs = map(createSubmittableExtrinsicOfCopyright, d)\n * ```\n *\n * @param d - \n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function createSubmittableExtrinsicOfCopyright(d: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AnStatementData",
                      "canonicalReference": "@anagolay/api!AnStatementData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubmittableExtrinsic",
                      "canonicalReference": "@polkadot/api-base!SubmittableExtrinsic:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<'promise'>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "d",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "name": "createSubmittableExtrinsicOfCopyright"
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.statements.createSubmittableExtrinsicOfOwnership:function(1)",
                  "docComment": "/**\n * Helper function for creating the Submittable result. This can be easily used in the `ramda.map` function with the list of AnStatementData. Returns the Submittable statement object\n * ```ts\n * import { map } from 'ramda'\n * const txs = map(createSubmittableExtrinsicOfOwnership, d)\n * ```\n *\n * @param d - \n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function createSubmittableExtrinsicOfOwnership(d: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AnStatementData",
                      "canonicalReference": "@anagolay/api!AnStatementData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SubmittableExtrinsic",
                      "canonicalReference": "@polkadot/api-base!SubmittableExtrinsic:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<'promise'>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "d",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "name": "createSubmittableExtrinsicOfOwnership"
                },
                {
                  "kind": "Variable",
                  "canonicalReference": "@anagolay/api!pallets.statements.palletName:var",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "palletName: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    }
                  ],
                  "isReadonly": true,
                  "releaseTag": "Public",
                  "name": "palletName",
                  "variableTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "Function",
                  "canonicalReference": "@anagolay/api!pallets.statements.saveOwnership:function(1)",
                  "docComment": "/**\n * Save a single poe to the chain. You need to provide the data, the ID is calculated before saving.\n *\n * __NOTE__ calculating the ID inside allows us to decouple the ID generation from the rest of the code and potentially the calculation of the ID on the chain\n *\n * @param d - Proof data that we want to save to the chain.\n *\n * @param signer - Account that will be owner of the transaction and ones who pays the fees\n *\n * @param options - Signer options\n *\n * @returns the custom event emitter\n *\n * Example:\n * ```ts\n * import { pallets } from '@anagolay/api';\n * const broadcast = await pallets.statements.saveOwnership(data, signer)\n *\n * broadcast.on(pallets.statements.config.EVENT_NAME_SINGLE, (p) => {\n *   console.log('[statements:save]', p.message)\n *   if (p.finalized) {\n *     process.exit(0)\n *   }\n * })\n * ```\n *\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "export declare function saveOwnership(d: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AnStatementData",
                      "canonicalReference": "@anagolay/api!AnStatementData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", signer: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AddressOrPair",
                      "canonicalReference": "@polkadot/api-base!AddressOrPair:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Partial",
                      "canonicalReference": "!Partial:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "SignerOptions",
                      "canonicalReference": "@polkadot/api!SignerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Promise",
                      "canonicalReference": "!Promise:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "ICustomEventEmitter",
                      "canonicalReference": "@anagolay/api!ICustomEventEmitter:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "returnTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 14
                  },
                  "releaseTag": "Public",
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "d",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "signer",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 9
                      },
                      "isOptional": true
                    }
                  ],
                  "name": "saveOwnership"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
